---
title: "Week 1: In-class assignment"
author: "PUT YOUR NAME HERE"
format: html
---

For this in-class assignment, you will work in a group to create your **individual** Quarto document. Please consult your group mates and [Tutorial: Authoring](https://quarto.org/docs/get-started/authoring/rstudio.html) webpage by [Quarto](https://quarto.org/). You can also use the Internet including ChatGPT. I am also available for any questions.

When you are finished, knit the document to HTML. Please carefully **proof read** and make edits as needed. Finally, commit + push your updated R project to the assignment repo. 

## Open GitHub repo on your own machine

Use R Studio to open the Week 1 Repo from GitHub Classroom

## Edit this file to create a HTML document using Quarto

The R code chunk below includes the R packages required to knit this document. This is often called a **setup** code. We want the code to run, but we don't want the final document to show the code or results. Edit the code chunk so that the code will run but the code and results are hidden from the final HTML output.

```{r}
library(tidyverse)
library(here)
library(texreg)
library(multgee)
library(table1)
# filter() and lag() are functions that exist in both R packages dplyr and stats
# make default choice the functions from the dplyr package
filter <- dplyr::filter
lag <- dplyr::lag
```

Next we want to use the `arthritis` data in the `multgee` package to see if the randomization was successful in Rheumatoid Arthritis Clinical Trial. 

```{r}
data("arthritis")
?arthritis
```

From the `arthritis` data set, create a new data set called `arth_bl` that includes only the baseline observations from each patient.

```{r}
arth_bl <- arthritis |>
  filter(time == 1)
```

Below is code that uses the `table1` package to create a Table of Patient Demographics (age and sex) stratified by treatment group. 

Edit the code so that the is publication quality which:

-   shows Median [Min, Max] for age
-   shows frequency and percentage of each sex category
-   shows frequency and percentage of baseline score
-   all variables and categories have proper labels
-   table has a title

In addition, make sure no warnings appear when running the code.

```{r}
table1( ~ age + sex + as.factor(baseline) | trt, data = arth_bl)
```


Write a few sentences that summarizes the Table of Patient Demographics.

Now, we want to compare the **dichotomized** rheumatoid arthritis score `y` between the two treatment groups at **month 5**.

-   Subset the `arthritis` data set to only include observations from month 5 for each patient
-   Create a new variable `highscore` which is equal to 1 if $y > 3$ and 0 if $y \leq 3$ 
-   Save the new data set as `arth5`
-   Display the first 10 observations of `arth5`

```{r}
arth5 <- arthritis |>
  filter(time == 5) |>
  mutate(highscore = ifelse(y > 3, 1, 0))
head(arth5, 10)
```

Let the outcome be $\Pr(Z=1)$ where $Z=1$ represents high arthritis score. Fit the following two **logistic regression** models:

1. Unadjusted model
$$
\text{logit}\left\{\Pr(Z=1)\right\} = \beta_0 + \beta_1\text{Treatment}
$$
2. Adjusted model
$$
\text{Write out the model that further adjusts for age, sex, and baseline score}
$$

Use the `htmlreg()` function in `textreg` package to compare the two models with the following specifications:

-   show the odds ratios and 95\% confidence intervals
-   remove the intercept estimate from the table
-   properly label all variables
-   properly label the two models

The document should display the **table**, and not the HTML code.


```{r}
#| output: asis

unadj <- glm(highscore ~ trt, 
             data = arth5,
             family = binomial("logit"))
adj <- glm(highscore ~ trt + age + as.factor(sex), 
           data = arth5,
           family = binomial("logit"))
htmlreg(list(unadj, adj))
```

Write a few sentences that summarize the table of two models.

